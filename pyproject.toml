[project]
name = "lmsys-query-analysis"
version = "0.1.0"
description = "Query analysis and clustering for LMSYS-1M dataset"
readme = "README.md"
authors = [
    { name = "jxnl", email = "jason@jxnl.co" }
]
requires-python = ">=3.10"
dependencies = [
    "datasets>=2.14.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "sqlmodel>=0.0.14",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "chromadb>=0.4.0",
    "instructor>=1.0.0",
    "anthropic>=0.18.0",
    "hdbscan>=0.8.33",
    "openai>=1.0.0",
    "anyio>=4.0.0",
    "ruff>=0.13.3",
    "jinja2>=3.1.0",
    "aiolimiter>=1.1.0",
    "tenacity>=8.0.0",
    "cohere>=5.0.0",
    "nest-asyncio>=1.6.0",
    "python-dotenv>=1.0.0",
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.27.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
lmsys = "lmsys_query_analysis.cli.main:app"
lmsys-api = "lmsys_query_analysis.api.app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
[tool.pytest.ini_options]
markers = [
    "smoke: quick smoke tests that may hit external APIs",
]

[tool.coverage.run]
source = ["src/lmsys_query_analysis"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/examples/*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "@overload",
]
ignore_errors = true
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
]
ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["lmsys_query_analysis"]

[tool.ruff.lint.per-file-ignores]
"src/lmsys_query_analysis/api/routers/*.py" = ["B008"]  # Allow Depends() in FastAPI routes
